name: Build and Push Docker Image

on:
  push:
    branches:
      - main  
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag for the Docker image'
        required: true
        default: 'latest'
  repository_dispatch:
    types: [docker-image-updated]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: "mahmoudazaid"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: ~/.cache/docker
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set Version from Dispatch Event
      if: github.event_name == 'repository_dispatch'
      run: |
        VERSION="${{ github.event.client_payload.version }}"
        BUILD_TOOLS_VERSION="${{ github.event.client_payload.build_tools_version }}"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "BUILD_TOOLS_VERSION=$BUILD_TOOLS_VERSION" >> $GITHUB_ENV

    - name: Extract version from Dockerfile (if not set by dispatch)
      id: extract_version
      if: env.VERSION == ''
      run: |
        VERSION=$(grep -m 1 'LABEL version' Dockerfile | cut -d '=' -f2 | tr -d '"')
        echo "VERSION=$VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build Docker image
      run: |
        if [ -z "$BUILD_TOOLS_VERSION" ]; then
          docker build -t ${{ env.DOCKER_USERNAME }}/android:${{ env.VERSION }} .
          docker build -t ${{ env.DOCKER_USERNAME }}/appium:${{ env.VERSION }} .
        else
          docker build -t ${{ env.DOCKER_USERNAME }}/android:${{ env.VERSION }}-${{ env.BUILD_TOOLS_VERSION }} .
          docker build -t ${{ env.DOCKER_USERNAME }}/appium:${{ env.VERSION }}-${{ env.BUILD_TOOLS_VERSION }} .
        fi
        docker build -t ${{ env.DOCKER_USERNAME }}/android:latest .
        docker build -t ${{ env.DOCKER_USERNAME }}/appium:latest .

    - name: Push Docker image
      run: |
        if [ -z "$BUILD_TOOLS_VERSION" ]; then
          docker push ${{ env.DOCKER_USERNAME }}/android:${{ env.VERSION }}
          docker push ${{ env.DOCKER_USERNAME }}/appium:${{ env.VERSION }}
        else
          docker push ${{ env.DOCKER_USERNAME }}/android:${{ env.VERSION }}-${{ env.BUILD_TOOLS_VERSION }}
          docker push ${{ env.DOCKER_USERNAME }}/appium:${{ env.VERSION }}-${{ env.BUILD_TOOLS_VERSION }}
        fi
        docker push ${{ env.DOCKER_USERNAME }}/android:latest
        docker push ${{ env.DOCKER_USERNAME }}/appium:latest

    - name: Clean up Docker images
      run: |
        docker image prune -af