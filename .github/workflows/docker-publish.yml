name: Build and Push Docker Image

on:
  push:
    branches:
      - main  
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag for the Docker image'
        required: true
        default: 'latest'
  repository_dispatch:
    types: [docker-image-updated]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: "mahmoudazaid"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: ~/.cache/docker
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Extract version from Dockerfile if not provided through inputs or dispatch
    - name: Extract version from Dockerfile if not provided
      id: extract_version
      run: |
        if [ -z "${{ github.event.inputs.version }}" ]; then
          VERSION=$(grep -m 1 'LABEL version' Dockerfile | cut -d '=' -f2 | tr -d '"')
        else
          VERSION="${{ github.event.inputs.version }}"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    # Build Docker images with the version and latest tags
    - name: Build Docker image
      run: |
        docker build -t ${{ env.DOCKER_USERNAME }}/android:${{ env.VERSION }} .
        docker build -t ${{ env.DOCKER_USERNAME }}/android:latest .

    # Output version for subsequent jobs
    outputs:
      image_version: ${{ steps.extract_version.outputs.VERSION }}
    
  scan:
    runs-on: ubuntu-latest
    needs: build
    env:
      DOCKER_USERNAME: "mahmoudazaid"
      DOCKER_SCOUT_URL: https://github.com/docker/scout-cli/releases/download/v1.15.0/docker-scout_1.15.0_linux_amd64.tar.gz

    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install Docker Scout
      run: |
        curl -fsSL ${{ env.DOCKER_SCOUT_URL }} | tar xz -C /usr/local/bin
        sudo chmod +x /usr/local/bin/docker-scout
        docker-scout version

    # Run Docker Scout to scan the images
    - name: Run Docker Scout to scan the images
      run: |
        docker-scout cves ${{ env.DOCKER_USERNAME }}/android:${{ needs.build.outputs.image_version }}
        docker-scout cves ${{ env.DOCKER_USERNAME }}/android:latest
    
  deploy:
    runs-on: ubuntu-latest
    needs: [build, scan]
    env:
      DOCKER_USERNAME: "mahmoudazaid"

    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Push Docker images to Docker Hub
    - name: Push Docker images
      run: |
        docker push ${{ env.DOCKER_USERNAME }}/android:${{ needs.build.outputs.image_version }}
        docker push ${{ env.DOCKER_USERNAME }}/android:latest

    # Clean up Docker images to free space
    - name: Clean up Docker images
      run: |
        docker image prune -af